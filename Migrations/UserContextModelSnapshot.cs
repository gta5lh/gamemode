// <auto-generated />
using System;
using Gamemode.Repositories.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Gamemode.Migrations
{
    [DbContext(typeof(UserContext))]
    partial class UserContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Gamemode.Repositories.Models.AdminRank", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("smallint")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("admin_rank");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            Name = "Junior"
                        },
                        new
                        {
                            Id = (byte)2,
                            Name = "Middle"
                        },
                        new
                        {
                            Id = (byte)3,
                            Name = "Senior"
                        },
                        new
                        {
                            Id = (byte)4,
                            Name = "Lead"
                        },
                        new
                        {
                            Id = (byte)5,
                            Name = "Owner"
                        });
                });

            modelBuilder.Entity("Gamemode.Repositories.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte?>("AdminRankId")
                        .HasColumnType("smallint")
                        .HasColumnName("admin_rank_id");

                    b.Property<string>("BanReason")
                        .HasColumnType("text")
                        .HasColumnName("ban_reason");

                    b.Property<DateTime?>("BannedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("banned_at");

                    b.Property<long?>("BannedById")
                        .HasColumnType("bigint")
                        .HasColumnName("banned_by_id");

                    b.Property<DateTime?>("BannedUntil")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("banned_until");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(254)")
                        .HasColumnName("email");

                    b.Property<string>("MuteReason")
                        .HasColumnType("text")
                        .HasColumnName("mute_reason");

                    b.Property<DateTime?>("MutedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("muted_at");

                    b.Property<long?>("MutedById")
                        .HasColumnType("bigint")
                        .HasColumnName("muted_by_id");

                    b.Property<DateTime?>("MutedUntil")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("muted_until");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(32)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("char(60)")
                        .HasColumnName("password");

                    b.HasKey("Id");

                    b.HasIndex("AdminRankId");

                    b.HasIndex("BannedById");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("MutedById");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("users");
                });

            modelBuilder.Entity("Gamemode.Repositories.Models.Weapon", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("integer")
                        .HasColumnName("amount");

                    b.Property<long>("Hash")
                        .HasColumnType("bigint")
                        .HasColumnName("hash");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "Hash")
                        .IsUnique();

                    b.ToTable("weapon");
                });

            modelBuilder.Entity("Gamemode.Repositories.Models.User", b =>
                {
                    b.HasOne("Gamemode.Repositories.Models.AdminRank", "AdminRank")
                        .WithMany()
                        .HasForeignKey("AdminRankId");

                    b.HasOne("Gamemode.Repositories.Models.User", "BannedBy")
                        .WithMany()
                        .HasForeignKey("BannedById");

                    b.HasOne("Gamemode.Repositories.Models.User", "MutedBy")
                        .WithMany()
                        .HasForeignKey("MutedById");

                    b.Navigation("AdminRank");

                    b.Navigation("BannedBy");

                    b.Navigation("MutedBy");
                });

            modelBuilder.Entity("Gamemode.Repositories.Models.Weapon", b =>
                {
                    b.HasOne("Gamemode.Repositories.Models.User", "User")
                        .WithMany("Weapons")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Gamemode.Repositories.Models.User", b =>
                {
                    b.Navigation("Weapons");
                });
#pragma warning restore 612, 618
        }
    }
}
